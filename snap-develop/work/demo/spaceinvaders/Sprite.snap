import awt.Canvas;
import awt.Color;
import awt.Dimension;
import awt.Graphics2D;
import awt.event.WindowAdapter;
import awt.event.WindowEvent;
import awt.image.BufferStrategy;
import awt.Graphics;
import awt.Rectangle;
import awt.event.KeyListener; 
import awt.event.KeyEvent;
import awt.Graphics;
import awt.Image;
import awt.GraphicsConfiguration;
import awt.GraphicsEnvironment;
import awt.Image;
import awt.Transparency;
import awt.image.BufferedImage;
import io.IOException;
import util.HashMap;
import util.ArrayList;
import net.URL;
import swing.JFrame;
import swing.JPanel;
import imageio.ImageIO;

/**
 * A sprite to be displayed on the screen. Note that a sprite
 * contains no state information, i.e. its just the image and 
 * not the location. This allows us to use a single sprite in
 * lots of different places without having to store multiple 
 * copies of the image.
 */
class Sprite {
   /** The image to be drawn for this sprite */
   var image;
   
   /**
    * Create a new sprite based on an image
    * 
    * @param image The image that is this sprite
    */
   new(image) {
      this.image = image;
   }
   
   /**
    * Get the width of the drawn sprite
    * 
    * @return The width in pixels of this sprite
    */
   getWidth() {
      return image.getWidth(null);
   }

   /**
    * Get the height of the drawn sprite
    * 
    * @return The height in pixels of this sprite
    */
   getHeight() {
      return image.getHeight(null);
   }
   
   /**
    * Draw the sprite onto the graphics context provided
    * 
    * @param g The graphics context on which to draw the sprite
    * @param x The x location at which to draw the sprite
    * @param y The y location at which to draw the sprite
    */
   draw(g, x, y) {
      g.drawImage(image,x,y,null);
   }
}