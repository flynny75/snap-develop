var subscription={},routes={},disconnect=[],socket=null,connections=0,attempts=0,total=1;function startSocket(){createSubscription();setTimeout(openSocket,1E3)}function refreshSocket(){null!=socket&&socket.close()}function isSocketOpen(){return null!=socket?1==socket.readyState:!1}
function createSubscription(){var a=window.document.location.hostname,b=window.document.location.port,c=window.document.location.protocol,d=window.document.location.pathname,f=window.document.location.search;subscription.panic=!1;subscription.query=f;var e="ws://";0==c.indexOf("https")&&(e="wss://");e+=a;0<=b-parseFloat(b)+1&&(e=e+":"+b);a=d.split("/");e=2<a.length?e+("/connect/"+a[2]):e+"/connect";subscription.address=e+f}
function disableRoutes(){0==subscription.panic&&(subscription.panic=!0,socket.close())}function enableRoutes(){1==subscription.panic&&(subscription.panic=!1,socket.close())}
function openSocket(){socket=new WebSocket(subscription.address);socket.onopen=function(){attempts=1;connections++;LoadSpinner.hide();console.log("Socket connected to '"+subscription.address+"'")};socket.onerror=function(a){a=disconnect.length;for(var b=0;b<a;b++){var c=disconnect[b];null!=c&&c()}LoadSpinner.show();console.log("Error connecting to '"+subscription.address+"'")};socket.onclose=function(a){a=1E3*(Math.pow(2,attempts++)-1);var b=disconnect.length,c=openSocket();3E4<a&&(a=3E4);setTimeout(c,
a);for(c=0;c<b;c++){var d=disconnect[c];null!=d&&d()}LoadSpinner.show();console.log("Connection closed to '"+subscription.address+"' reconnecting in "+a+" ms")};socket.onmessage=function(a){var b=a.data,c=b.indexOf(":");a=null;-1!=c&&(a=b.substring(c+1),b=b.substring(0,c));c=routes[b];if(void 0!=c){if(!subscription.panic)for(var d=0;d<c.length;d++){var f=c[d];null!=f&&f(this,b,a)}}else console.log("No route defined for '"+b+"' with '"+a+"'");LoadSpinner.hide()}}
function createRoute(a,b,c){var d=a.toUpperCase();d!=a&&alert("Illegal route '"+d+"' is not in upper case");d=routes[a];null==d&&(d=[],routes[a]=d);if(null!=b){a=d.length;for(var f=!1,e=0;e<a;e++)d[e]==b&&(f=!0);f||d.push(b)}createTermination(c);refreshSocket()}function createTermination(a){if(null!=a){for(var b=disconnect.length,c=!1,d=0;d<b;d++)disconnect[d]==a&&(c=!0);c||disconnect.push(a)}}ModuleSystem.registerModule("socket","Socket subscription module: socket.js",startSocket,[]);
